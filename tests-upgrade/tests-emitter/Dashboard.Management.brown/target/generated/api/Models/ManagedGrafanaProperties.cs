// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Extensions;

    /// <summary>Properties specific to the grafana resource.</summary>
    public partial class ManagedGrafanaProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IManagedGrafanaProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IManagedGrafanaPropertiesInternal
    {

        /// <summary>Backing field for <see cref="ApiKey" /> property.</summary>
        private string _apiKey;

        /// <summary>The api key setting of the Grafana instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Owned)]
        public string ApiKey { get => this._apiKey; set => this._apiKey = value; }

        /// <summary>Backing field for <see cref="AutoGeneratedDomainNameLabelScope" /> property.</summary>
        private string _autoGeneratedDomainNameLabelScope;

        /// <summary>Scope for dns deterministic name hash calculation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Owned)]
        public string AutoGeneratedDomainNameLabelScope { get => this._autoGeneratedDomainNameLabelScope; set => this._autoGeneratedDomainNameLabelScope = value; }

        /// <summary>Backing field for <see cref="DeterministicOutboundIP" /> property.</summary>
        private string _deterministicOutboundIP;

        /// <summary>Whether a Grafana instance uses deterministic outbound IPs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Owned)]
        public string DeterministicOutboundIP { get => this._deterministicOutboundIP; set => this._deterministicOutboundIP = value; }

        /// <summary>Backing field for <see cref="Endpoint" /> property.</summary>
        private string _endpoint;

        /// <summary>The endpoint of the Grafana instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Owned)]
        public string Endpoint { get => this._endpoint; }

        /// <summary>Backing field for <see cref="EnterpriseConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IEnterpriseConfigurations _enterpriseConfiguration;

        /// <summary>Enterprise settings of a Grafana instance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IEnterpriseConfigurations EnterpriseConfiguration { get => (this._enterpriseConfiguration = this._enterpriseConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.EnterpriseConfigurations()); set => this._enterpriseConfiguration = value; }

        /// <summary>The AutoRenew setting of the Enterprise subscription</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public string EnterpriseConfigurationMarketplaceAutoRenew { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IEnterpriseConfigurationsInternal)EnterpriseConfiguration).MarketplaceAutoRenew; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IEnterpriseConfigurationsInternal)EnterpriseConfiguration).MarketplaceAutoRenew = value ?? null; }

        /// <summary>The Plan Id of the Azure Marketplace subscription for the Enterprise plugins</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public string EnterpriseConfigurationMarketplacePlanId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IEnterpriseConfigurationsInternal)EnterpriseConfiguration).MarketplacePlanId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IEnterpriseConfigurationsInternal)EnterpriseConfiguration).MarketplacePlanId = value ?? null; }

        /// <summary>Backing field for <see cref="GrafanaConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurations _grafanaConfiguration;

        /// <summary>Server configurations of a Grafana instance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurations GrafanaConfiguration { get => (this._grafanaConfiguration = this._grafanaConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.GrafanaConfigurations()); set => this._grafanaConfiguration = value; }

        /// <summary>Backing field for <see cref="GrafanaIntegration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaIntegrations _grafanaIntegration;

        /// <summary>
        /// GrafanaIntegrations is a bundled observability experience (e.g. pre-configured data source, tailored Grafana dashboards,
        /// alerting defaults) for common monitoring scenarios.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaIntegrations GrafanaIntegration { get => (this._grafanaIntegration = this._grafanaIntegration ?? new Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.GrafanaIntegrations()); set => this._grafanaIntegration = value; }

        /// <summary>Array of AzureMonitorWorkspaceIntegration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IAzureMonitorWorkspaceIntegration> GrafanaIntegrationAzureMonitorWorkspaceIntegration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaIntegrationsInternal)GrafanaIntegration).AzureMonitorWorkspaceIntegration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaIntegrationsInternal)GrafanaIntegration).AzureMonitorWorkspaceIntegration = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="GrafanaMajorVersion" /> property.</summary>
        private string _grafanaMajorVersion;

        /// <summary>The major Grafana software version to target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Owned)]
        public string GrafanaMajorVersion { get => this._grafanaMajorVersion; set => this._grafanaMajorVersion = value; }

        /// <summary>Backing field for <see cref="GrafanaPlugin" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IManagedGrafanaPropertiesGrafanaPlugins _grafanaPlugin;

        /// <summary>
        /// Installed plugin list of the Grafana instance. Key is plugin id, value is plugin definition.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IManagedGrafanaPropertiesGrafanaPlugins GrafanaPlugin { get => (this._grafanaPlugin = this._grafanaPlugin ?? new Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.ManagedGrafanaPropertiesGrafanaPlugins()); set => this._grafanaPlugin = value; }

        /// <summary>Backing field for <see cref="GrafanaVersion" /> property.</summary>
        private string _grafanaVersion;

        /// <summary>The Grafana software version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Owned)]
        public string GrafanaVersion { get => this._grafanaVersion; }

        /// <summary>Internal Acessors for Endpoint</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IManagedGrafanaPropertiesInternal.Endpoint { get => this._endpoint; set { {_endpoint = value;} } }

        /// <summary>Internal Acessors for EnterpriseConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IEnterpriseConfigurations Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IManagedGrafanaPropertiesInternal.EnterpriseConfiguration { get => (this._enterpriseConfiguration = this._enterpriseConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.EnterpriseConfigurations()); set { {_enterpriseConfiguration = value;} } }

        /// <summary>Internal Acessors for GrafanaConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurations Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IManagedGrafanaPropertiesInternal.GrafanaConfiguration { get => (this._grafanaConfiguration = this._grafanaConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.GrafanaConfigurations()); set { {_grafanaConfiguration = value;} } }

        /// <summary>Internal Acessors for GrafanaConfigurationSecurity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.ISecurity Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IManagedGrafanaPropertiesInternal.GrafanaConfigurationSecurity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).Security; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).Security = value ?? null /* model class */; }

        /// <summary>Internal Acessors for GrafanaConfigurationSmtp</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.ISmtp Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IManagedGrafanaPropertiesInternal.GrafanaConfigurationSmtp { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).Smtp; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).Smtp = value ?? null /* model class */; }

        /// <summary>Internal Acessors for GrafanaConfigurationSnapshot</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.ISnapshots Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IManagedGrafanaPropertiesInternal.GrafanaConfigurationSnapshot { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).Snapshot; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).Snapshot = value ?? null /* model class */; }

        /// <summary>Internal Acessors for GrafanaConfigurationUnifiedAlertingScreenshot</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IUnifiedAlertingScreenshots Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IManagedGrafanaPropertiesInternal.GrafanaConfigurationUnifiedAlertingScreenshot { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).UnifiedAlertingScreenshot; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).UnifiedAlertingScreenshot = value ?? null /* model class */; }

        /// <summary>Internal Acessors for GrafanaConfigurationUser</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IUsers Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IManagedGrafanaPropertiesInternal.GrafanaConfigurationUser { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).User; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).User = value ?? null /* model class */; }

        /// <summary>Internal Acessors for GrafanaIntegration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaIntegrations Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IManagedGrafanaPropertiesInternal.GrafanaIntegration { get => (this._grafanaIntegration = this._grafanaIntegration ?? new Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.GrafanaIntegrations()); set { {_grafanaIntegration = value;} } }

        /// <summary>Internal Acessors for GrafanaVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IManagedGrafanaPropertiesInternal.GrafanaVersion { get => this._grafanaVersion; set { {_grafanaVersion = value;} } }

        /// <summary>Internal Acessors for OutboundIP</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IManagedGrafanaPropertiesInternal.OutboundIP { get => this._outboundIP; set { {_outboundIP = value;} } }

        /// <summary>Internal Acessors for PrivateEndpointConnection</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IPrivateEndpointConnection> Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IManagedGrafanaPropertiesInternal.PrivateEndpointConnection { get => this._privateEndpointConnection; set { {_privateEndpointConnection = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IManagedGrafanaPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="OutboundIP" /> property.</summary>
        private System.Collections.Generic.List<string> _outboundIP;

        /// <summary>List of outbound IPs if deterministicOutboundIP is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> OutboundIP { get => this._outboundIP; }

        /// <summary>Backing field for <see cref="PrivateEndpointConnection" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IPrivateEndpointConnection> _privateEndpointConnection;

        /// <summary>The private endpoint connections of the Grafana instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IPrivateEndpointConnection> PrivateEndpointConnection { get => this._privateEndpointConnection; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>Provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="PublicNetworkAccess" /> property.</summary>
        private string _publicNetworkAccess;

        /// <summary>Indicate the state for enable or disable traffic over the public interface.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Owned)]
        public string PublicNetworkAccess { get => this._publicNetworkAccess; set => this._publicNetworkAccess = value; }

        /// <summary>
        /// Set to true to execute the CSRF check even if the login cookie is not in a request (default false).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public bool? SecurityCsrfAlwaysCheck { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).SecurityCsrfAlwaysCheck; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).SecurityCsrfAlwaysCheck = value ?? default(bool); }

        /// <summary>Enable this to allow Grafana to send email. Default is false</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public bool? SmtpEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpEnabled = value ?? default(bool); }

        /// <summary>
        /// Address used when sending out emails
        /// https://pkg.go.dev/net/mail#Address
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public string SmtpFromAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpFromAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpFromAddress = value ?? null; }

        /// <summary>
        /// Name to be used when sending out emails. Default is "Azure Managed Grafana Notification"
        /// https://pkg.go.dev/net/mail#Address
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public string SmtpFromName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpFromName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpFromName = value ?? null; }

        /// <summary>SMTP server hostname with port, e.g. test.email.net:587</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public string SmtpHost { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpHost; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpHost = value ?? null; }

        /// <summary>
        /// Password of SMTP auth. If the password contains # or ;, then you have to wrap it with triple quotes
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public System.Security.SecureString SmtpPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpPassword = value ?? null; }

        /// <summary>
        /// Verify SSL for SMTP server. Default is false
        /// https://pkg.go.dev/crypto/tls#Config
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public bool? SmtpSkipVerify { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpSkipVerify; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpSkipVerify = value ?? default(bool); }

        /// <summary>
        /// The StartTLSPolicy setting of the SMTP configuration
        /// https://pkg.go.dev/github.com/go-mail/mail#StartTLSPolicy
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public string SmtpStartTlsPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpStartTlsPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpStartTlsPolicy = value ?? null; }

        /// <summary>User of SMTP auth</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public string SmtpUser { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpUser; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpUser = value ?? null; }

        /// <summary>Set to false to disable external snapshot publish endpoint</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public bool? SnapshotExternalEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).SnapshotExternalEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).SnapshotExternalEnabled = value ?? default(bool); }

        /// <summary>
        /// Set to false to disable capture screenshot in Unified Alert due to performance issue.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public bool? UnifiedAlertingScreenshotCaptureEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).UnifiedAlertingScreenshotCaptureEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).UnifiedAlertingScreenshotCaptureEnabled = value ?? default(bool); }

        /// <summary>
        /// Set to true so editors can administrate dashboards, folders and teams they create.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public bool? UserEditorsCanAdmin { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).UserEditorsCanAdmin; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).UserEditorsCanAdmin = value ?? default(bool); }

        /// <summary>
        /// Set to true so viewers can access and use explore and perform temporary edits on panels in dashboards they have access
        /// to. They cannot save their changes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public bool? UserViewersCanEdit { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).UserViewersCanEdit; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurationsInternal)GrafanaConfiguration).UserViewersCanEdit = value ?? default(bool); }

        /// <summary>Backing field for <see cref="ZoneRedundancy" /> property.</summary>
        private string _zoneRedundancy;

        /// <summary>The zone redundancy setting of the Grafana instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Owned)]
        public string ZoneRedundancy { get => this._zoneRedundancy; set => this._zoneRedundancy = value; }

        /// <summary>Creates an new <see cref="ManagedGrafanaProperties" /> instance.</summary>
        public ManagedGrafanaProperties()
        {

        }
    }
    /// Properties specific to the grafana resource.
    public partial interface IManagedGrafanaProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.IJsonSerializable
    {
        /// <summary>The api key setting of the Grafana instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The api key setting of the Grafana instance.",
        SerializedName = @"apiKey",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PSArgumentCompleterAttribute("Disabled", "Enabled")]
        string ApiKey { get; set; }
        /// <summary>Scope for dns deterministic name hash calculation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Scope for dns deterministic name hash calculation.",
        SerializedName = @"autoGeneratedDomainNameLabelScope",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PSArgumentCompleterAttribute("TenantReuse")]
        string AutoGeneratedDomainNameLabelScope { get; set; }
        /// <summary>Whether a Grafana instance uses deterministic outbound IPs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Whether a Grafana instance uses deterministic outbound IPs.",
        SerializedName = @"deterministicOutboundIP",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PSArgumentCompleterAttribute("Disabled", "Enabled")]
        string DeterministicOutboundIP { get; set; }
        /// <summary>The endpoint of the Grafana instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The endpoint of the Grafana instance.",
        SerializedName = @"endpoint",
        PossibleTypes = new [] { typeof(string) })]
        string Endpoint { get;  }
        /// <summary>The AutoRenew setting of the Enterprise subscription</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The AutoRenew setting of the Enterprise subscription",
        SerializedName = @"marketplaceAutoRenew",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PSArgumentCompleterAttribute("Disabled", "Enabled")]
        string EnterpriseConfigurationMarketplaceAutoRenew { get; set; }
        /// <summary>The Plan Id of the Azure Marketplace subscription for the Enterprise plugins</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The Plan Id of the Azure Marketplace subscription for the Enterprise plugins",
        SerializedName = @"marketplacePlanId",
        PossibleTypes = new [] { typeof(string) })]
        string EnterpriseConfigurationMarketplacePlanId { get; set; }
        /// <summary>Array of AzureMonitorWorkspaceIntegration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Array of AzureMonitorWorkspaceIntegration",
        SerializedName = @"azureMonitorWorkspaceIntegrations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IAzureMonitorWorkspaceIntegration) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IAzureMonitorWorkspaceIntegration> GrafanaIntegrationAzureMonitorWorkspaceIntegration { get; set; }
        /// <summary>The major Grafana software version to target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The major Grafana software version to target.",
        SerializedName = @"grafanaMajorVersion",
        PossibleTypes = new [] { typeof(string) })]
        string GrafanaMajorVersion { get; set; }
        /// <summary>
        /// Installed plugin list of the Grafana instance. Key is plugin id, value is plugin definition.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Installed plugin list of the Grafana instance. Key is plugin id, value is plugin definition.",
        SerializedName = @"grafanaPlugins",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IManagedGrafanaPropertiesGrafanaPlugins) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IManagedGrafanaPropertiesGrafanaPlugins GrafanaPlugin { get; set; }
        /// <summary>The Grafana software version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The Grafana software version.",
        SerializedName = @"grafanaVersion",
        PossibleTypes = new [] { typeof(string) })]
        string GrafanaVersion { get;  }
        /// <summary>List of outbound IPs if deterministicOutboundIP is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"List of outbound IPs if deterministicOutboundIP is enabled.",
        SerializedName = @"outboundIPs",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> OutboundIP { get;  }
        /// <summary>The private endpoint connections of the Grafana instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The private endpoint connections of the Grafana instance.",
        SerializedName = @"privateEndpointConnections",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IPrivateEndpointConnection) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IPrivateEndpointConnection> PrivateEndpointConnection { get;  }
        /// <summary>Provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Provisioning state of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PSArgumentCompleterAttribute("Accepted", "Creating", "Updating", "Deleting", "Succeeded", "Failed", "Canceled", "Deleted", "NotSpecified")]
        string ProvisioningState { get;  }
        /// <summary>Indicate the state for enable or disable traffic over the public interface.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicate the state for enable or disable traffic over the public interface.",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string PublicNetworkAccess { get; set; }
        /// <summary>
        /// Set to true to execute the CSRF check even if the login cookie is not in a request (default false).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Set to true to execute the CSRF check even if the login cookie is not in a request (default false).",
        SerializedName = @"csrfAlwaysCheck",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SecurityCsrfAlwaysCheck { get; set; }
        /// <summary>Enable this to allow Grafana to send email. Default is false</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Enable this to allow Grafana to send email. Default is false",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SmtpEnabled { get; set; }
        /// <summary>
        /// Address used when sending out emails
        /// https://pkg.go.dev/net/mail#Address
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Address used when sending out emails
        https://pkg.go.dev/net/mail#Address",
        SerializedName = @"fromAddress",
        PossibleTypes = new [] { typeof(string) })]
        string SmtpFromAddress { get; set; }
        /// <summary>
        /// Name to be used when sending out emails. Default is "Azure Managed Grafana Notification"
        /// https://pkg.go.dev/net/mail#Address
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name to be used when sending out emails. Default is ""Azure Managed Grafana Notification""
        https://pkg.go.dev/net/mail#Address",
        SerializedName = @"fromName",
        PossibleTypes = new [] { typeof(string) })]
        string SmtpFromName { get; set; }
        /// <summary>SMTP server hostname with port, e.g. test.email.net:587</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"SMTP server hostname with port, e.g. test.email.net:587",
        SerializedName = @"host",
        PossibleTypes = new [] { typeof(string) })]
        string SmtpHost { get; set; }
        /// <summary>
        /// Password of SMTP auth. If the password contains # or ;, then you have to wrap it with triple quotes
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Password of SMTP auth. If the password contains # or ;, then you have to wrap it with triple quotes",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString SmtpPassword { get; set; }
        /// <summary>
        /// Verify SSL for SMTP server. Default is false
        /// https://pkg.go.dev/crypto/tls#Config
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Verify SSL for SMTP server. Default is false
        https://pkg.go.dev/crypto/tls#Config",
        SerializedName = @"skipVerify",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SmtpSkipVerify { get; set; }
        /// <summary>
        /// The StartTLSPolicy setting of the SMTP configuration
        /// https://pkg.go.dev/github.com/go-mail/mail#StartTLSPolicy
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The StartTLSPolicy setting of the SMTP configuration
        https://pkg.go.dev/github.com/go-mail/mail#StartTLSPolicy",
        SerializedName = @"startTLSPolicy",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PSArgumentCompleterAttribute("OpportunisticStartTLS", "MandatoryStartTLS", "NoStartTLS")]
        string SmtpStartTlsPolicy { get; set; }
        /// <summary>User of SMTP auth</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"User of SMTP auth",
        SerializedName = @"user",
        PossibleTypes = new [] { typeof(string) })]
        string SmtpUser { get; set; }
        /// <summary>Set to false to disable external snapshot publish endpoint</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Set to false to disable external snapshot publish endpoint",
        SerializedName = @"externalEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SnapshotExternalEnabled { get; set; }
        /// <summary>
        /// Set to false to disable capture screenshot in Unified Alert due to performance issue.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Set to false to disable capture screenshot in Unified Alert due to performance issue.",
        SerializedName = @"captureEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? UnifiedAlertingScreenshotCaptureEnabled { get; set; }
        /// <summary>
        /// Set to true so editors can administrate dashboards, folders and teams they create.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Set to true so editors can administrate dashboards, folders and teams they create.",
        SerializedName = @"editorsCanAdmin",
        PossibleTypes = new [] { typeof(bool) })]
        bool? UserEditorsCanAdmin { get; set; }
        /// <summary>
        /// Set to true so viewers can access and use explore and perform temporary edits on panels in dashboards they have access
        /// to. They cannot save their changes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Set to true so viewers can access and use explore and perform temporary edits on panels in dashboards they have access to. They cannot save their changes.",
        SerializedName = @"viewersCanEdit",
        PossibleTypes = new [] { typeof(bool) })]
        bool? UserViewersCanEdit { get; set; }
        /// <summary>The zone redundancy setting of the Grafana instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The zone redundancy setting of the Grafana instance.",
        SerializedName = @"zoneRedundancy",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PSArgumentCompleterAttribute("Disabled", "Enabled")]
        string ZoneRedundancy { get; set; }

    }
    /// Properties specific to the grafana resource.
    internal partial interface IManagedGrafanaPropertiesInternal

    {
        /// <summary>The api key setting of the Grafana instance.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PSArgumentCompleterAttribute("Disabled", "Enabled")]
        string ApiKey { get; set; }
        /// <summary>Scope for dns deterministic name hash calculation.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PSArgumentCompleterAttribute("TenantReuse")]
        string AutoGeneratedDomainNameLabelScope { get; set; }
        /// <summary>Whether a Grafana instance uses deterministic outbound IPs.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PSArgumentCompleterAttribute("Disabled", "Enabled")]
        string DeterministicOutboundIP { get; set; }
        /// <summary>The endpoint of the Grafana instance.</summary>
        string Endpoint { get; set; }
        /// <summary>Enterprise settings of a Grafana instance</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IEnterpriseConfigurations EnterpriseConfiguration { get; set; }
        /// <summary>The AutoRenew setting of the Enterprise subscription</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PSArgumentCompleterAttribute("Disabled", "Enabled")]
        string EnterpriseConfigurationMarketplaceAutoRenew { get; set; }
        /// <summary>The Plan Id of the Azure Marketplace subscription for the Enterprise plugins</summary>
        string EnterpriseConfigurationMarketplacePlanId { get; set; }
        /// <summary>Server configurations of a Grafana instance</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaConfigurations GrafanaConfiguration { get; set; }
        /// <summary>Grafana security settings</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.ISecurity GrafanaConfigurationSecurity { get; set; }
        /// <summary>
        /// Email server settings.
        /// https://grafana.com/docs/grafana/v9.0/setup-grafana/configure-grafana/#smtp
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.ISmtp GrafanaConfigurationSmtp { get; set; }
        /// <summary>Grafana Snapshots settings</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.ISnapshots GrafanaConfigurationSnapshot { get; set; }
        /// <summary>Grafana Unified Alerting Screenshots settings</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IUnifiedAlertingScreenshots GrafanaConfigurationUnifiedAlertingScreenshot { get; set; }
        /// <summary>Grafana users settings</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IUsers GrafanaConfigurationUser { get; set; }
        /// <summary>
        /// GrafanaIntegrations is a bundled observability experience (e.g. pre-configured data source, tailored Grafana dashboards,
        /// alerting defaults) for common monitoring scenarios.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IGrafanaIntegrations GrafanaIntegration { get; set; }
        /// <summary>Array of AzureMonitorWorkspaceIntegration</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IAzureMonitorWorkspaceIntegration> GrafanaIntegrationAzureMonitorWorkspaceIntegration { get; set; }
        /// <summary>The major Grafana software version to target.</summary>
        string GrafanaMajorVersion { get; set; }
        /// <summary>
        /// Installed plugin list of the Grafana instance. Key is plugin id, value is plugin definition.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IManagedGrafanaPropertiesGrafanaPlugins GrafanaPlugin { get; set; }
        /// <summary>The Grafana software version.</summary>
        string GrafanaVersion { get; set; }
        /// <summary>List of outbound IPs if deterministicOutboundIP is enabled.</summary>
        System.Collections.Generic.List<string> OutboundIP { get; set; }
        /// <summary>The private endpoint connections of the Grafana instance.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.IPrivateEndpointConnection> PrivateEndpointConnection { get; set; }
        /// <summary>Provisioning state of the resource.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PSArgumentCompleterAttribute("Accepted", "Creating", "Updating", "Deleting", "Succeeded", "Failed", "Canceled", "Deleted", "NotSpecified")]
        string ProvisioningState { get; set; }
        /// <summary>Indicate the state for enable or disable traffic over the public interface.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string PublicNetworkAccess { get; set; }
        /// <summary>
        /// Set to true to execute the CSRF check even if the login cookie is not in a request (default false).
        /// </summary>
        bool? SecurityCsrfAlwaysCheck { get; set; }
        /// <summary>Enable this to allow Grafana to send email. Default is false</summary>
        bool? SmtpEnabled { get; set; }
        /// <summary>
        /// Address used when sending out emails
        /// https://pkg.go.dev/net/mail#Address
        /// </summary>
        string SmtpFromAddress { get; set; }
        /// <summary>
        /// Name to be used when sending out emails. Default is "Azure Managed Grafana Notification"
        /// https://pkg.go.dev/net/mail#Address
        /// </summary>
        string SmtpFromName { get; set; }
        /// <summary>SMTP server hostname with port, e.g. test.email.net:587</summary>
        string SmtpHost { get; set; }
        /// <summary>
        /// Password of SMTP auth. If the password contains # or ;, then you have to wrap it with triple quotes
        /// </summary>
        System.Security.SecureString SmtpPassword { get; set; }
        /// <summary>
        /// Verify SSL for SMTP server. Default is false
        /// https://pkg.go.dev/crypto/tls#Config
        /// </summary>
        bool? SmtpSkipVerify { get; set; }
        /// <summary>
        /// The StartTLSPolicy setting of the SMTP configuration
        /// https://pkg.go.dev/github.com/go-mail/mail#StartTLSPolicy
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PSArgumentCompleterAttribute("OpportunisticStartTLS", "MandatoryStartTLS", "NoStartTLS")]
        string SmtpStartTlsPolicy { get; set; }
        /// <summary>User of SMTP auth</summary>
        string SmtpUser { get; set; }
        /// <summary>Set to false to disable external snapshot publish endpoint</summary>
        bool? SnapshotExternalEnabled { get; set; }
        /// <summary>
        /// Set to false to disable capture screenshot in Unified Alert due to performance issue.
        /// </summary>
        bool? UnifiedAlertingScreenshotCaptureEnabled { get; set; }
        /// <summary>
        /// Set to true so editors can administrate dashboards, folders and teams they create.
        /// </summary>
        bool? UserEditorsCanAdmin { get; set; }
        /// <summary>
        /// Set to true so viewers can access and use explore and perform temporary edits on panels in dashboards they have access
        /// to. They cannot save their changes.
        /// </summary>
        bool? UserViewersCanEdit { get; set; }
        /// <summary>The zone redundancy setting of the Grafana instance.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PSArgumentCompleterAttribute("Disabled", "Enabled")]
        string ZoneRedundancy { get; set; }

    }
}