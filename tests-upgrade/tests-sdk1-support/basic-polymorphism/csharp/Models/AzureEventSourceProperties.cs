// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Sample.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of an event source that reads events from an event broker in
    /// Azure.
    /// </summary>
    public partial class AzureEventSourceProperties : EventSourceCommonProperties
    {
        /// <summary>
        /// Initializes a new instance of the AzureEventSourceProperties class.
        /// </summary>
        public AzureEventSourceProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureEventSourceProperties class.
        /// </summary>
        /// <param name="eventSourceResourceId">The resource id of the event
        /// source in Azure Resource Manager.</param>
        /// <param name="provisioningState">Provisioning state of the resource.
        /// Possible values include: 'Accepted', 'Creating', 'Updating',
        /// 'Succeeded', 'Failed', 'Deleting'</param>
        /// <param name="creationTime">The time the resource was
        /// created.</param>
        /// <param name="timestampPropertyName">The event property that will be
        /// used as the event source's timestamp. If a value isn't specified
        /// for timestampPropertyName, or if null or empty-string is specified,
        /// the event creation time will be used.</param>
        public AzureEventSourceProperties(string eventSourceResourceId, ProvisioningState? provisioningState = default(ProvisioningState?), System.DateTime? creationTime = default(System.DateTime?), string timestampPropertyName = default(string))
            : base(provisioningState, creationTime, timestampPropertyName)
        {
            this.EventSourceResourceId = eventSourceResourceId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the resource id of the event source in Azure Resource
        /// Manager.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "eventSourceResourceId")]
        public string EventSourceResourceId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.EventSourceResourceId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "EventSourceResourceId");
            }
        }
    }
}
