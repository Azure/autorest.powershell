// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Sample.Models
{
    using System.Linq;

    /// <summary>
    /// An environment is a set of time-series data available for query, and is
    /// the top level Azure Time Series Insights resource.
    /// </summary>
    [Newtonsoft.Json.JsonObject("EnvironmentResource")]
    public partial class EnvironmentResource : TrackedResource
    {
        /// <summary>
        /// Initializes a new instance of the EnvironmentResource class.
        /// </summary>
        public EnvironmentResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EnvironmentResource class.
        /// </summary>
        /// <param name="location">Resource location</param>
        /// <param name="sku">The sku determines the type of environment,
        /// either standard (S1 or S2) or long-term (L1). For standard
        /// environments the sku determines the capacity of the environment,
        /// the ingress rate, and the billing rate.</param>
        /// <param name="id">Resource Id</param>
        /// <param name="name">Resource name</param>
        /// <param name="type">Resource type</param>
        /// <param name="tags">Resource tags</param>
        public EnvironmentResource(string location, Sku sku, string id = default(string), string name = default(string), string type = default(string), string tags = default(string))
            : base(location, id, name, type, tags)
        {
            this.Sku = sku;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the sku determines the type of environment, either
        /// standard (S1 or S2) or long-term (L1). For standard environments
        /// the sku determines the capacity of the environment, the ingress
        /// rate, and the billing rate.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sku")]
        public Sku Sku { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (this.Sku == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Sku");
            }
            if (this.Sku != null)
            {
                this.Sku.Validate();
            }
        }
    }
}
