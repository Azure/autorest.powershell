// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Sample.Models
{
    using System.Linq;

    /// <summary>
    /// The storage configuration provides the non-secret connection details
    /// about the customer storage account that is used to store the
    /// environment's data.
    /// </summary>
    public partial class LongTermStorageConfigurationOutput
    {
        /// <summary>
        /// Initializes a new instance of the
        /// LongTermStorageConfigurationOutput class.
        /// </summary>
        public LongTermStorageConfigurationOutput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// LongTermStorageConfigurationOutput class.
        /// </summary>
        /// <param name="accountName">The name of the storage account that will
        /// hold the environment's long term data.</param>
        public LongTermStorageConfigurationOutput(string accountName)
        {
            this.AccountName = accountName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the storage account that will hold the
        /// environment's long term data.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "accountName")]
        public string AccountName { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.AccountName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "AccountName");
            }
        }
    }
}
