// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Sample.Models
{
    using System.Linq;

    /// <summary>
    /// Parameters supplied to the Update Environment operation to update a
    /// standard environment.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class StandardEnvironmentUpdateParameters : EnvironmentUpdateParameters
    {
        /// <summary>
        /// Initializes a new instance of the
        /// StandardEnvironmentUpdateParameters class.
        /// </summary>
        public StandardEnvironmentUpdateParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// StandardEnvironmentUpdateParameters class.
        /// </summary>
        /// <param name="tags">Key-value pairs of additional properties for the
        /// environment.</param>
        /// <param name="sku">The sku of the environment.</param>
        /// <param name="dataRetentionTime">ISO8601 timespan specifying the
        /// minimum number of days the environment's events will be available
        /// for query.</param>
        /// <param name="storageLimitExceededBehavior">The behavior the Time
        /// Series Insights service should take when the environment's capacity
        /// has been exceeded. If "PauseIngress" is specified, new events will
        /// not be read from the event source. If "PurgeOldData" is specified,
        /// new events will continue to be read and old events will be deleted
        /// from the environment. The default behavior is PurgeOldData.
        /// Possible values include: 'PurgeOldData', 'PauseIngress'</param>
        /// <param name="partitionKeyProperties">The list of event properties
        /// which will be used to partition data in the environment.</param>
        public StandardEnvironmentUpdateParameters(string tags = default(string), Sku sku = default(Sku), string dataRetentionTime = default(string), StorageLimitExceededBehavior? storageLimitExceededBehavior = default(StorageLimitExceededBehavior?), System.Collections.Generic.IList<TimeSeriesIdProperty> partitionKeyProperties = default(System.Collections.Generic.IList<TimeSeriesIdProperty>))
            : base(tags)
        {
            this.Sku = sku;
            this.DataRetentionTime = dataRetentionTime;
            this.StorageLimitExceededBehavior = storageLimitExceededBehavior;
            this.PartitionKeyProperties = partitionKeyProperties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the sku of the environment.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sku")]
        public Sku Sku { get; set; }

        /// <summary>
        /// Gets or sets ISO8601 timespan specifying the minimum number of days
        /// the environment's events will be available for query.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.dataRetentionTime")]
        public string DataRetentionTime { get; set; }

        /// <summary>
        /// Gets or sets the behavior the Time Series Insights service should
        /// take when the environment's capacity has been exceeded. If
        /// "PauseIngress" is specified, new events will not be read from the
        /// event source. If "PurgeOldData" is specified, new events will
        /// continue to be read and old events will be deleted from the
        /// environment. The default behavior is PurgeOldData. Possible values
        /// include: 'PurgeOldData', 'PauseIngress'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.storageLimitExceededBehavior")]
        public StorageLimitExceededBehavior? StorageLimitExceededBehavior { get; set; }

        /// <summary>
        /// Gets or sets the list of event properties which will be used to
        /// partition data in the environment.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.partitionKeyProperties")]
        public System.Collections.Generic.IList<TimeSeriesIdProperty> PartitionKeyProperties { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Sku != null)
            {
                this.Sku.Validate();
            }
        }
    }
}
