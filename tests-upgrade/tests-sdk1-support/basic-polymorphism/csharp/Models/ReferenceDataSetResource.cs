// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Sample.Models
{
    using System.Linq;

    /// <summary>
    /// A reference data set provides metadata about the events in an
    /// environment. Metadata in the reference data set will be joined with
    /// events as they are read from event sources. The metadata that makes up
    /// the reference data set is uploaded or modified through the Time Series
    /// Insights data plane APIs.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class ReferenceDataSetResource : TrackedResource
    {
        /// <summary>
        /// Initializes a new instance of the ReferenceDataSetResource class.
        /// </summary>
        public ReferenceDataSetResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ReferenceDataSetResource class.
        /// </summary>
        /// <param name="location">Resource location</param>
        /// <param name="keyProperties">The list of key properties for the
        /// reference data set.</param>
        /// <param name="id">Resource Id</param>
        /// <param name="name">Resource name</param>
        /// <param name="type">Resource type</param>
        /// <param name="tags">Resource tags</param>
        /// <param name="dataStringComparisonBehavior">The reference data set
        /// key comparison behavior can be set using this property. By default,
        /// the value is 'Ordinal' - which means case sensitive key comparison
        /// will be performed while joining reference data with events or while
        /// adding new reference data. When 'OrdinalIgnoreCase' is set, case
        /// insensitive comparison will be used. Possible values include:
        /// 'Ordinal', 'OrdinalIgnoreCase'</param>
        /// <param name="provisioningState">Provisioning state of the resource.
        /// Possible values include: 'Accepted', 'Creating', 'Updating',
        /// 'Succeeded', 'Failed', 'Deleting'</param>
        /// <param name="creationTime">The time the resource was
        /// created.</param>
        public ReferenceDataSetResource(string location, string id = default(string), string name = default(string), string type = default(string), string tags = default(string), ProvisioningState? provisioningState = default(ProvisioningState?), System.Collections.Generic.IList<ReferenceDataSetKeyProperty> keyProperties = default(System.Collections.Generic.IList<ReferenceDataSetKeyProperty>), DataStringComparisonBehavior? dataStringComparisonBehavior = default(DataStringComparisonBehavior?), System.DateTime? creationTime = default(System.DateTime?))
            : base(location, id, name, type, tags)
        {
            this.KeyProperties = keyProperties;
            this.DataStringComparisonBehavior = dataStringComparisonBehavior;
            this.ProvisioningState = provisioningState;
            this.CreationTime = creationTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
		[Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
		public ProvisioningState? ProvisioningState {get; private set; }
        /// Gets or sets the list of key properties for the reference data set.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.keyProperties")]
        public System.Collections.Generic.IList<ReferenceDataSetKeyProperty> KeyProperties { get; set; }

        /// <summary>
        /// Gets or sets the reference data set key comparison behavior can be
        /// set using this property. By default, the value is 'Ordinal' - which
        /// means case sensitive key comparison will be performed while joining
        /// reference data with events or while adding new reference data. When
        /// 'OrdinalIgnoreCase' is set, case insensitive comparison will be
        /// used. Possible values include: 'Ordinal', 'OrdinalIgnoreCase'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.dataStringComparisonBehavior")]
        public DataStringComparisonBehavior? DataStringComparisonBehavior { get; set; }

        /// <summary>
        /// Gets or sets provisioning state of the resource. Possible values
        /// include: 'Accepted', 'Creating', 'Updating', 'Succeeded', 'Failed',
        /// 'Deleting'
        /// </summary>
        

        /// <summary>
        /// Gets the time the resource was created.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.creationTime")]
        public System.DateTime? CreationTime { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
