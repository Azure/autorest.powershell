// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Sample.Models
{

    /// <summary>
    /// Defines values for WarmStoragePropertiesState.
    /// </summary>
    [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
    public enum WarmStoragePropertiesState
    {
        [System.Runtime.Serialization.EnumMember(Value = "Ok")]
        Ok,
        [System.Runtime.Serialization.EnumMember(Value = "Error")]
        Error,
        [System.Runtime.Serialization.EnumMember(Value = "Unknown")]
        Unknown
    }
    internal static class WarmStoragePropertiesStateEnumExtension
    {
        internal static string ToSerializedValue(this WarmStoragePropertiesState? value)
        {
            return value == null ? null : ((WarmStoragePropertiesState)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this WarmStoragePropertiesState value)
        {
            switch( value )
            {
                case WarmStoragePropertiesState.Ok:
                    return "Ok";
                case WarmStoragePropertiesState.Error:
                    return "Error";
                case WarmStoragePropertiesState.Unknown:
                    return "Unknown";
            }
            return null;
        }

        internal static WarmStoragePropertiesState? ParseWarmStoragePropertiesState(this string value)
        {
            switch( value )
            {
                case "Ok":
                    return WarmStoragePropertiesState.Ok;
                case "Error":
                    return WarmStoragePropertiesState.Error;
                case "Unknown":
                    return WarmStoragePropertiesState.Unknown;
            }
            return null;
        }
    }
}
