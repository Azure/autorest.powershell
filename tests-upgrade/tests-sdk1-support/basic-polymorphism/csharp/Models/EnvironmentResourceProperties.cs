// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Sample.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of the environment.
    /// </summary>
    public partial class EnvironmentResourceProperties : ResourceProperties
    {
        /// <summary>
        /// Initializes a new instance of the EnvironmentResourceProperties
        /// class.
        /// </summary>
        public EnvironmentResourceProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EnvironmentResourceProperties
        /// class.
        /// </summary>
        /// <param name="provisioningState">Provisioning state of the resource.
        /// Possible values include: 'Accepted', 'Creating', 'Updating',
        /// 'Succeeded', 'Failed', 'Deleting'</param>
        /// <param name="creationTime">The time the resource was
        /// created.</param>
        /// <param name="dataAccessId">An id used to access the environment
        /// data, e.g. to query the environment's events or upload reference
        /// data for the environment.</param>
        /// <param name="dataAccessFqdn">The fully qualified domain name used
        /// to access the environment data, e.g. to query the environment's
        /// events or upload reference data for the environment.</param>
        /// <param name="status">An object that represents the status of the
        /// environment, and its internal state in the Time Series Insights
        /// service.</param>
        public EnvironmentResourceProperties(ProvisioningState? provisioningState = default(ProvisioningState?), System.DateTime? creationTime = default(System.DateTime?), string dataAccessId = default(string), string dataAccessFqdn = default(string), EnvironmentStatus status = default(EnvironmentStatus))
            : base(provisioningState, creationTime)
        {
            this.DataAccessId = dataAccessId;
            this.DataAccessFqdn = dataAccessFqdn;
            this.Status = status;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets an id used to access the environment data, e.g. to query the
        /// environment's events or upload reference data for the environment.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dataAccessId")]
        public string DataAccessId { get; private set; }

        /// <summary>
        /// Gets the fully qualified domain name used to access the environment
        /// data, e.g. to query the environment's events or upload reference
        /// data for the environment.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dataAccessFqdn")]
        public string DataAccessFqdn { get; private set; }

        /// <summary>
        /// Gets or sets an object that represents the status of the
        /// environment, and its internal state in the Time Series Insights
        /// service.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "status")]
        public EnvironmentStatus Status { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Status != null)
            {
                this.Status.Validate();
            }
        }
    }
}
