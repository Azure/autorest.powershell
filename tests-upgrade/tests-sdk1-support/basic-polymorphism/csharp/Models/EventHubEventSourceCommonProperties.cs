// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Sample.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of the EventHub event source.
    /// </summary>
    public partial class EventHubEventSourceCommonProperties : AzureEventSourceProperties
    {
        /// <summary>
        /// Initializes a new instance of the
        /// EventHubEventSourceCommonProperties class.
        /// </summary>
        public EventHubEventSourceCommonProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// EventHubEventSourceCommonProperties class.
        /// </summary>
        /// <param name="eventSourceResourceId">The resource id of the event
        /// source in Azure Resource Manager.</param>
        /// <param name="serviceBusNamespace">The name of the service bus that
        /// contains the event hub.</param>
        /// <param name="eventHubName">The name of the event hub.</param>
        /// <param name="consumerGroupName">The name of the event hub's
        /// consumer group that holds the partitions from which events will be
        /// read.</param>
        /// <param name="keyName">The name of the SAS key that grants the Time
        /// Series Insights service access to the event hub. The shared access
        /// policies for this key must grant 'Listen' permissions to the event
        /// hub.</param>
        /// <param name="provisioningState">Provisioning state of the resource.
        /// Possible values include: 'Accepted', 'Creating', 'Updating',
        /// 'Succeeded', 'Failed', 'Deleting'</param>
        /// <param name="creationTime">The time the resource was
        /// created.</param>
        /// <param name="timestampPropertyName">The event property that will be
        /// used as the event source's timestamp. If a value isn't specified
        /// for timestampPropertyName, or if null or empty-string is specified,
        /// the event creation time will be used.</param>
        public EventHubEventSourceCommonProperties(string eventSourceResourceId, string serviceBusNamespace, string eventHubName, string consumerGroupName, string keyName, ProvisioningState? provisioningState = default(ProvisioningState?), System.DateTime? creationTime = default(System.DateTime?), string timestampPropertyName = default(string))
            : base(eventSourceResourceId, provisioningState, creationTime, timestampPropertyName)
        {
            this.ServiceBusNamespace = serviceBusNamespace;
            this.EventHubName = eventHubName;
            this.ConsumerGroupName = consumerGroupName;
            this.KeyName = keyName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the service bus that contains the event
        /// hub.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "serviceBusNamespace")]
        public string ServiceBusNamespace { get; set; }

        /// <summary>
        /// Gets or sets the name of the event hub.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "eventHubName")]
        public string EventHubName { get; set; }

        /// <summary>
        /// Gets or sets the name of the event hub's consumer group that holds
        /// the partitions from which events will be read.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "consumerGroupName")]
        public string ConsumerGroupName { get; set; }

        /// <summary>
        /// Gets or sets the name of the SAS key that grants the Time Series
        /// Insights service access to the event hub. The shared access
        /// policies for this key must grant 'Listen' permissions to the event
        /// hub.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "keyName")]
        public string KeyName { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (this.ServiceBusNamespace == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ServiceBusNamespace");
            }
            if (this.EventHubName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "EventHubName");
            }
            if (this.ConsumerGroupName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ConsumerGroupName");
            }
            if (this.KeyName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "KeyName");
            }
        }
    }
}
