// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerRegistry.Models
{
    using System.Linq;

    /// <summary>
    /// Base properties for any task step.
    /// </summary>
    [Newtonsoft.Json.JsonObject("TaskStepProperties")]
    public partial class TaskStepProperties
    {
        /// <summary>
        /// Initializes a new instance of the TaskStepProperties class.
        /// </summary>
        public TaskStepProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TaskStepProperties class.
        /// </summary>
        /// <param name="baseImageDependencies">List of base image dependencies
        /// for a step.</param>
        /// <param name="contextPath">The URL(absolute or relative) of the
        /// source context for the task step.</param>
        /// <param name="contextAccessToken">The token (git PAT or SAS token of
        /// storage account blob) associated with the context for a
        /// step.</param>
        public TaskStepProperties(System.Collections.Generic.IList<BaseImageDependency> baseImageDependencies = default(System.Collections.Generic.IList<BaseImageDependency>), string contextPath = default(string), string contextAccessToken = default(string))
        {
            this.BaseImageDependencies = baseImageDependencies;
            this.ContextPath = contextPath;
            this.ContextAccessToken = contextAccessToken;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets list of base image dependencies for a step.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "baseImageDependencies")]
        public System.Collections.Generic.IList<BaseImageDependency> BaseImageDependencies { get; private set; }

        /// <summary>
        /// Gets or sets the URL(absolute or relative) of the source context
        /// for the task step.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "contextPath")]
        public string ContextPath { get; set; }

        /// <summary>
        /// Gets or sets the token (git PAT or SAS token of storage account
        /// blob) associated with the context for a step.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "contextAccessToken")]
        public string ContextAccessToken { get; set; }

    }
}
